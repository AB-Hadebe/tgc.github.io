// Firestore Security Rules - DEVELOPMENT VERSION
// ⚠️ WARNING: These rules allow public read access and authenticated write access
// Use more restrictive rules in production!

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow anyone to read jobs and events (public content)
    match /jobs/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /events/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /programs/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Applications can be created by anyone but only read by authenticated users
    match /applications/{document} {
      allow create: if true;
      allow read, update, delete: if request.auth != null;
    }
    
    // Users collection - only accessible to authenticated users
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin-only collections (if you have any)
    match /admin/{document} {
      allow read, write: if request.auth != null;
    }
  }
}

// Firebase Storage Security Rules - DEVELOPMENT VERSION
// ⚠️ Copy these rules to Firebase Storage Rules (not Firestore)
/*
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow anyone to upload resumes (for job applications)
    match /resumes/{applicationId}/{filename} {
      allow read, write: if true;
      // Validate file size and type
      allow write: if request.resource.size < 10 * 1024 * 1024 // 10MB limit
        && (request.resource.contentType.matches('application/pdf') ||
            request.resource.contentType.matches('application/msword') ||
            request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document'));
    }
    
    // Authenticated users can manage other files
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}
*/


// PRODUCTION RULES (more secure - use these later):
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Public content - anyone can read, only authenticated admins can write
    match /jobs/{document} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /events/{document} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /programs/{document} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Applications - anyone can create, only admins can read/manage
    match /applications/{document} {
      allow create: if true;
      allow read, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
*/
